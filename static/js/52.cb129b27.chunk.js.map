{"version":3,"file":"static/js/52.cb129b27.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.jsx","components/ContactItem/ContactItem.style.jsx","components/ContactItem/ContactItem.jsx","components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: center;\n`;\n\nexport const Label = styled.label`\n  margin: 10px 0 10px 0;\n`;\n\nexport const Input = styled.input`\n  width: 250px;\n  height: 40px;\n  padding: 0 15px 0 15px;\n  border-radius: 5px;\n`;\n\nexport const Button = styled.button`\n  width: 200px;\n  height: 40px;\n  cursor: pointer;\n  margin: 5px 0 5px;\n  border-radius: 5px;\n  color: #1d628b;\n  font-weight: bold;\n  background-color: transparent;\n  border: 2px solid #1d628b;\n  box-shadow: 2px 2px 10px rgba(0, 0, 0, 0.07);\n  transition: all 0.5s ease;\n\n  &:hover {\n    transform: scale(1.05);\n  }\n`;\n","import { useState } from 'react';\nimport { Form, Label, Input, Button } from './ContactForm.styled';\nimport {\n  useGetContactsQuery,\n  useCreateContactMutation,\n} from 'redux/contactsAPI';\nimport { toast } from 'react-toastify';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const { data: contacts } = useGetContactsQuery();\n  const [createContact] = useCreateContactMutation();\n\n  const handleInputChange = evt => {\n    const { value } = evt.currentTarget;\n\n    evt.currentTarget.name === 'name' ? setName(value) : setNumber(value);\n  };\n\n  const addContact = data => {\n    const contactName = contacts?.map(contact => contact.name.toLowerCase());\n    const isAdding = contactName?.includes(data.name.toLowerCase());\n\n    if (!isAdding) {\n      createContact(data);\n      reset();\n      toast.success(`Contact, ${name} successfully added`);\n    } else {\n      toast.error(`${data.name} is already in contacts.`);\n    }\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const contact = {\n      name,\n      number,\n    };\n\n    addContact(contact);\n  };\n\n  // очистка инпутов\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label>\n        <Input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Enter name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          value={name}\n          onChange={handleInputChange}\n          required\n        />\n      </Label>\n      <Label>\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          placeholder=\"Phone number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          value={number}\n          onChange={handleInputChange}\n          required\n        />\n      </Label>\n      <Button type=\"submit\">Save contact</Button>\n    </Form>\n  );\n};\n\nexport default ContactForm;\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-direction: column;\n  padding: 10px 45px;\n`;\n\nexport const Error = styled.h2`\n  font-size: 24px;\n  font-weight: 500;\n  line-height: 1.62;\n  letter-spacing: 0.03em;\n  text-align: center;\n  color: #232323;\n`;\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  &:not(:last-child) {\n    margin-bottom: 5px;\n  }\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const Contact = styled.p`\n  margin-right: 10px;\n  font-size: 22px;\n  font-weight: bold;\n  border-bottom: 2px dashed #1d628b;\n`;\n\nexport const BtnDelete = styled.button`\n  padding: 5px 5px;\n  cursor: pointer;\n  font-size: 16px;\n  font-weight: bold;\n  background-color: inherit;\n  border: 1px solid #1d628b;\n  border-radius: 5px;\n  color: #1d628b;\n  transition: all 0.3s ease;\n\n  &:hover {\n    transform: scale(1.05);\n    box-shadow: 2px 2px 10px rgba(0, 0, 0, 0.07);\n  }\n`;\n","import { useDeleteContactMutation } from 'redux/contactsAPI';\nimport { Item, Contact, BtnDelete } from './ContactItem.style';\nimport { RotatingLines } from 'react-loader-spinner';\nimport PropTypes from 'prop-types';\n\nconst ContactItem = ({ id, name, number }) => {\n  const [deleteContact, { isLoading: isDeleting }] = useDeleteContactMutation();\n\n  return (\n    <Item key={id}>\n      <Contact>\n        {name}: {number}\n      </Contact>\n      <BtnDelete\n        type=\"button\"\n        onClick={() => deleteContact(id)}\n        disabled={isDeleting}\n      >\n        {isDeleting && <RotatingLines width=\"15\" />} Delete\n      </BtnDelete>\n    </Item>\n  );\n};\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n\nexport default ContactItem;\n","import styled from 'styled-components';\n\nexport const LoaderContainer = styled.div`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n","import { RotatingLines } from 'react-loader-spinner';\nimport { LoaderContainer } from './Loader.styled';\n\nconst Loader = () => {\n  return (\n    <LoaderContainer role=\"alert\">\n      <RotatingLines strokeColor=\"#1d628b\" />\n    </LoaderContainer>\n  );\n};\n\nexport default Loader;\n","import { List, Error } from './ContactList.styled';\nimport ContactItem from 'components/ContactItem';\nimport Loader from 'components/Loader';\nimport { useSelector } from 'react-redux';\nimport { getFilter } from 'redux/contactsSlice';\nimport { useGetContactsQuery } from 'redux/contactsAPI';\n\nconst ContactList = () => {\n  const { data: contacts, error, isLoading } = useGetContactsQuery();\n\n  const filter = useSelector(getFilter);\n\n  const filterContacts = () => {\n    return (\n      contacts &&\n      contacts.filter(contact =>\n        contact.name.toLowerCase().includes(filter.toLowerCase())\n      )\n    );\n  };\n\n  const contactList = filterContacts();\n  const renderContacts = contacts && !isLoading && contactList.length > 0;\n\n  return (\n    <List>\n      {renderContacts &&\n        contactList.map(({ id, name, number }) => (\n          <ContactItem id={id} key={id} name={name} number={number} />\n        ))}\n      {isLoading && <Loader />}\n      {error && (\n        <Error>Try adding phone details or contact your administrator</Error>\n      )}\n    </List>\n  );\n};\n\nexport default ContactList;\n","import styled from 'styled-components';\n\nexport const InputFilter = styled.input`\n  height: 40px;\n  padding: 0 15px 0 15px;\n  border-radius: 5px;\n`;\n\nexport const LabelFilter = styled.label`\n  margin: 10px 10px;\n  display: flex;\n  flex-direction: column;\n`;\n","import { InputFilter, LabelFilter } from './Filter.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getFilter, filter } from 'redux/contactsSlice';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filterName = useSelector(getFilter);\n\n  const handleInput = evt => {\n    dispatch(filter(evt.currentTarget.value.trim()));\n  };\n\n  return (\n    <LabelFilter>\n      <InputFilter\n        type=\"text\"\n        placeholder=\"Find contacts by name\"\n        value={filterName}\n        onChange={handleInput}\n      />\n    </LabelFilter>\n  );\n};\n\nexport default Filter;\n","import ContactForm from 'components/ContactForm';\nimport ContactList from 'components/ContactList';\nimport Filter from 'components/Filter';\n\nexport const ContactsPage = () => {\n  return (\n    <div>\n      <ContactForm />\n      <Filter />\n      <ContactList />\n    </div>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["Form","styled","Label","Input","Button","useState","name","setName","number","setNumber","contacts","useGetContactsQuery","data","useCreateContactMutation","createContact","handleInputChange","evt","value","currentTarget","reset","onSubmit","preventDefault","contactName","map","contact","toLowerCase","includes","toast","addContact","type","placeholder","pattern","title","onChange","required","List","Error","Item","Contact","BtnDelete","id","useDeleteContactMutation","deleteContact","isDeleting","isLoading","onClick","disabled","width","LoaderContainer","role","strokeColor","error","filter","useSelector","getFilter","contactList","renderContacts","length","InputFilter","LabelFilter","dispatch","useDispatch","filterName","trim"],"sourceRoot":""}